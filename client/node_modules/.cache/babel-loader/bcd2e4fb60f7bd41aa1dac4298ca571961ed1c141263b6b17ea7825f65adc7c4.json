{"ast":null,"code":"var _jsxFileName = \"F:\\\\Internship\\\\function react email\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport \"./styles.css\";\nimport sample from \"./savefile.json\";\nimport EmailEditor from \"react-email-editor\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = props => {\n  _s();\n  const emailEditorRef = useRef(null);\n  // console.log(\"emailEditorRef 1\", emailEditorRef);\n\n  const exportHtml = () => {\n    emailEditorRef.current.editor.exportHtml(data => {\n      const {\n        design,\n        html\n      } = data;\n      const htmlContent = html;\n      const blob = new Blob([htmlContent], {\n        type: \"text/html;charset=utf-8\"\n      });\n      saveAs(blob, \"hello-world.html\");\n    });\n  };\n  const sendEmail = async () => {\n    function solve(enteredEmail, html) {\n      // const parser = new DOMParser();\n\n      // // Your string containing the HTML code\n      // const htmlString = \"<h1>Hello, world!</h1><p>This is a paragraph.</p>\";\n\n      // // Use the parseFromString method to convert the string into a DOM object\n      // const htmlDocument = parser.parseFromString(html, \"text/html\");\n      // var newDiv = document.createElement(\"div\");\n\n      // // Step 2: Set properties or attributes of the div element\n      // newDiv.innerHTML = \"This is a new div!\";\n      // newDiv.style.backgroundColor = \"#F0F0F0\";\n      // newDiv.style.padding = \"20px\";\n      // htmlDocument.body.appendChild(newDiv);\n      // console.log(htmlDocument);\n\n      const postData = {\n        email: enteredEmail\n      };\n      // console.log(postData);\n\n      axios.post(\"http://localhost:3001/users\", postData).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    const enteredEmail = prompt(\"Please enter your test email\");\n    var pageHTML;\n    emailEditorRef.current.editor.exportHtml(data => {\n      pageHTML = data.html;\n      solve(enteredEmail, pageHTML);\n    });\n  };\n  const saveDesign = () => {\n    emailEditorRef.current.editor.saveDesign(design => {\n      console.log(\"saveDesign\", JSON.stringify(design, null, 4));\n      alert(\"Design JSON has been logged in your developer console.\");\n    });\n  };\n  const onDesignLoad = data => {\n    console.log(\"onDesignLoad\", data);\n  };\n  const onLoad = () => {\n    emailEditorRef.current.editor.addEventListener(\"onDesignLoad\", onDesignLoad);\n    emailEditorRef.current.editor.loadDesign(sample);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-btn\",\n        onClick: saveDesign,\n        children: \"Save Design\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-btn\",\n        onClick: exportHtml,\n        children: \"Export HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-btn\",\n        onClick: sendEmail,\n        children: \"Send Test Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-btn\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailEditor, {\n      ref: emailEditorRef,\n      onLoad: onLoad,\n      minHeight: \"90vh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1wjes/Kz/b5auh7Kj7JpH04JgPk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","sample","EmailEditor","axios","saveAs","jsxDEV","_jsxDEV","App","props","_s","emailEditorRef","exportHtml","current","editor","data","design","html","htmlContent","blob","Blob","type","sendEmail","solve","enteredEmail","postData","email","post","then","response","console","log","catch","error","prompt","pageHTML","saveDesign","JSON","stringify","alert","onDesignLoad","onLoad","addEventListener","loadDesign","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","minHeight","_c","$RefreshReg$"],"sources":["F:/Internship/function react email/client/src/App.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport \"./styles.css\";\nimport sample from \"./savefile.json\";\n\nimport EmailEditor from \"react-email-editor\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\n\nconst App = (props) => {\n  const emailEditorRef = useRef(null);\n  // console.log(\"emailEditorRef 1\", emailEditorRef);\n\n\n  const exportHtml = () => {\n    emailEditorRef.current.editor.exportHtml((data) => {\n      const { design, html } = data;\n      const htmlContent = html;\n      const blob = new Blob([htmlContent], { type: \"text/html;charset=utf-8\" });\n      saveAs(blob, \"hello-world.html\");\n    });\n  };\n\n  const sendEmail = async () => {\n    function solve(enteredEmail, html) {\n      // const parser = new DOMParser();\n\n      // // Your string containing the HTML code\n      // const htmlString = \"<h1>Hello, world!</h1><p>This is a paragraph.</p>\";\n\n      // // Use the parseFromString method to convert the string into a DOM object\n      // const htmlDocument = parser.parseFromString(html, \"text/html\");\n      // var newDiv = document.createElement(\"div\");\n\n      // // Step 2: Set properties or attributes of the div element\n      // newDiv.innerHTML = \"This is a new div!\";\n      // newDiv.style.backgroundColor = \"#F0F0F0\";\n      // newDiv.style.padding = \"20px\";\n      // htmlDocument.body.appendChild(newDiv);\n      // console.log(htmlDocument);\n\n      const postData = {\n        email: enteredEmail\n      };\n      // console.log(postData);\n\n      axios\n        .post(\"http://localhost:3001/users\", postData)\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n\n    const enteredEmail = prompt(\"Please enter your test email\");\n    var pageHTML;\n\n     emailEditorRef.current.editor.exportHtml((data) => {\n      pageHTML = data.html;\n      solve(enteredEmail, pageHTML);\n    });\n  };\n\n  const saveDesign = () => {\n    emailEditorRef.current.editor.saveDesign((design) => {\n      console.log(\"saveDesign\", JSON.stringify(design, null, 4));\n      alert(\"Design JSON has been logged in your developer console.\");\n    });\n  };\n\n  const onDesignLoad = (data) => {\n    console.log(\"onDesignLoad\", data);\n  };\n\n  const onLoad = () => {\n    emailEditorRef.current.editor.addEventListener(\n      \"onDesignLoad\",\n      onDesignLoad\n    );\n    emailEditorRef.current.editor.loadDesign(sample);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"navbar\">\n        <button className=\"save-btn\" onClick={saveDesign}>\n          Save Design\n        </button>\n        <button className=\"save-btn\" onClick={exportHtml}>\n          Export HTML\n        </button>\n        <button className=\"save-btn\" onClick={sendEmail}>\n          Send Test Email\n        </button>\n        <button className=\"save-btn\">Send</button>\n      </div>\n\n      <EmailEditor ref={emailEditorRef} onLoad={onLoad} minHeight=\"90vh\" />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}